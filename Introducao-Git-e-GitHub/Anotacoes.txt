

Link para download do Git: https://git-scm.com/download/win
Primeiramente necessario usar git init se nao tiver o .git na pasta
O Git Bash eh um terminal extendido para otimizar o uso do Git.
Apos criar o Repositorio no GitHub:
1) GitBash na pasta do diretorio local
2) Copia o Link do repositorio do GitHub
3) git clone LINK --> link do repositorio 

CRIOU UMA NOVA PASTA:
1) git add .
2) git commit -m ""
3) git remote add origin <URL_do_repositório_GitHub>
4) git push -u origin master


Apos criar uma pasta para colocar no servidor remoto do GitHub comando: (Nao esuqeca de estar dentro do repositorio)
1) git status ---> Para saber se o git já entendeu que existe a pasta no repositório
2) git add . OU git add -a ---> a pasta ficará verde que o git irá entender que o meu arquivo, no caso .txt, vai ser utilizado no controle de versão local
3) git commit -m "Mensagem" --> Essa mensagem será exibida ao lado da pasta no GitHub. É importante deixar o mais claro possível o que aquela pasta terá
4) git status ---> vai mostrar que tem um commit local mas não foi enviado para a nuvem
5) git push origin main --> branch main que será enviada. Será enviado todos os commits para a nuvem 

PARA CONSEGUIR DIVIDIR OS DOIS TRABALHOS ramificar:

---> git branch "nome" : cria uma nova branch com o nome
---> git log --oneline --decorate : indica séries de commit mas mostra aonde o HEAD está apontando na branch
---> git checkout "nome da branch" --> muda da branch atual para a branch indicada no nome

MERGING BRANCHES (UNIR OS DOIS TRABALHOS DIVIDIDOS NAS BRANCHS):
1) ir para a branch que a gente quer unir, ou seja, usar git checkout "nome da branch"
2) git merge "nome da branch" : traz a nome da branch para a branch atual que está

ANTES DE DAR O GIT PULL

--> usar o "git fecth" e depois o "git diff origin/branch" para ver as alterações que foram feitas e depois usar o git pull para puxar as alterações feitas no github
Lembrar de dar o git fetch porque ele nao reconhece as outras branchs

APAGAR BRANCH:
1) entrar na branch
2) git branch -d nome_da_branch. Se a branch não foi mesclada completamente em outras branches (ou seja, ainda contém commits exclusivos), o Git exibirá um aviso. Nesse caso, você pode usar a opção -D 
3)git branch -D nome_da_branch
4) git push origin --nome_da_branch



ERRO FATAL ORIGIN:
1) git remote -v --> certificar que o repositorio origin esta e se nao estiver
2) git remote add origin URL_DO_REPOSITÓRIO
3) git pull origin "nome da branch"


Adicionar imagem no readme.md
1) Ir em Issues ao lado de Code
2) Create a Issue 
2) Clicar em "Attach files by dragging & dropping, selecting or pasting them ou arrastar para a a[rea .
4) Copiar o link da aba Write
5) Ir em <>Code e colar
6) Commit changes

CASO DE O GIT --VERSION no git bash da pasta e não apareça a versão do git:
1) Painel de controle
2) Procure variáveis do Sistema
3) Procure PATH
4) adicione o caminho para a pasta desejada :)

quando nao achar a branch desejada, usar git branch "nome da branch"

DESFAZER ALTERACOES REPOSITORIO LOCAL:
rm -rf "arquivo"

RESTAURAR UM ARQUIVO QUE APAGOU:
1) git status
2) git  restore "nome do arquivo que achou no status"

ALTERAR O QUE ESCREVEU NO ULTIMO COMMIT:
1) git log para ver o commit
2)git commit --amend -m"nova mensagem"

DESFAZER PARA O COMMIT ANTERIOR:
1) git log
2) copia o hash do commit que quer retornar
3) git reset --soft hash_do_commit
(PODE SER O git reset --mixed hash_do_commit -> pegou os arquivos dos commits posteriores do hash indicado e adicionou na arvore de trabalho indicando como untracked files)
(PODE SER TBM o git reset --hard hash_do_commit -> ignora completamente os arquivos que estavam no commit anterior e desfez eles)

git reflog -> comando mais detalhado dos commits

o git reset nome-do-arquivo tambem remove a pasta

QUANDO QUISER BAIXAR AS ALTERACOES FEITA REMOTA MAS NAO QUER MESCLAR COM REPOSITORIO LOCAL:
1)git fetch origin main
2) git diff main origin/main(ve a diferenca entre as duas branchs origin  e main )
mas agora se quiser trazer as duas juntas apos ter usado o git fecth ( so baixa a remota sem emsclar com a local)
3) git merge origin/main

clonar repositorio apenas uma branch especifica
git clone url --branch branch_que_ira_clonar --single-branch


APOS TER DELETADO UM ARQUIVO E NAO QUER QUE ELE VAI JUNTO PARA O REPOSITORIO REMOTO:
1) git stash (arquiva a modificacao)(git stash li-> vai mostrar essa alteracao arquivada)
e caso queira trazer essas moficacoes arquivadas para a nossa branch:
git stash pop (traz mas exclui a alteracao mais recente da pilha)
git stash apply ( se quiser manter essa ultima alteracao para uso posterior)

ERROR:  ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/Brunamark/dio-desafio-github-primeiro-repositorio.git'
O que fazer:
1)git pull origin main
e o resto dos passos são de subir a pasta para o GitHub (add. , commit e push).
(ESSE ERRO SE REFERE A QUANDO ALTERA A PASTA REMOTAEMNTE MAS A BRANCH NAO ESTA APONTANDO PARA ESSE COMMIT FEITO REMORATMENTE E POR ISSO  PRECISA QUE ESTEJA APONTANDO PARA O MESMO COMMIT LOCALMENTE E REMOTAMENTE)
